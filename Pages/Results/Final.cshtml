@page
@model CompetitionApp.Pages.Results.FinalModel
@using CompetitionApp.Pages.Configuration
@{
    ViewData["Title"] = "Resultados Finais";
    var config = PenaltyConfigModel.GetCurrentConfiguration();
}

<h1>Resultados Finais da Competição</h1>

<div class="mb-3">
    <a asp-page="/Configuration/PenaltyConfig" class="btn btn-outline-primary btn-sm">
        <i class="bi bi-gear"></i> Configurar Penalidades
    </a>
</div>

@if (Model.FinalResults.Count == 0)
{
    <div class="alert alert-warning">
        Não há resultados suficientes para gerar a classificação final. Certifique-se de registrar os resultados das <a asp-page="/Rounds/Round1">rodadas</a>.
    </div>
}
else
{
    <div class="card mb-4">
        <div class="card-header">
            Classificação Final (Baseada no Melhor Tempo)
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Posição</th>
                            <th>Nome</th>
                            <th>Melhor Tempo</th>
                            <th>Rodada do Melhor Tempo</th>
                            <th>Tempo Rodada 1</th>
                            <th>Tempo Rodada 2</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.FinalResults.Count; i++)
                        {
                            var result = Model.FinalResults[i];
                            <tr>
                                <td>@(i + 1)</td>
                                <td>@result.Name</td>
                                <td>@(result.BestTime == config.DisqualifiedValue ? "Desclassificado" : $"{result.BestTime:F3}s")</td>
                                <td>@result.BestRound</td>
                                <td>@(result.Round1Time == config.DisqualifiedValue ? "Desclassificado" : (result.Round1Time == 0 ? "Não registrado" : $"{result.Round1Time:F3}s"))</td>
                                <td>@(result.Round2Time == config.DisqualifiedValue ? "Desclassificado" : (result.Round2Time == 0 ? "Não registrado" : $"{result.Round2Time:F3}s"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <a asp-page="/Index" class="btn btn-secondary">Voltar</a>
            <a asp-page="/Results/ExportPdf" class="btn btn-success">Exportar para PDF</a>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    Resultados da Primeira Rodada
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Posição</th>
                                    <th>Nome</th>
                                    <th>Tempo Base</th>
                                    <th>Penalidades</th>
                                    <th>Tempo Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var round1Results = Model.Round1Results
                                        .OrderBy(p => p.IsEliminated)
                                        .ThenBy(p => p.CalculateTotalTime())
                                        .ToList();

                                    for (int i = 0; i < round1Results.Count; i++)
                                    {
                                        var result = round1Results[i];
                                        var penalties = result.CalculateTotalTime() - result.TimeInSeconds;
                                        <tr>
                                            <td>@(i + 1)</td>
                                            <td>@result.Name</td>
                                            <td>@(result.IsEliminated ? "Desclassificado" : $"{result.TimeInSeconds:F3}s")</td>
                                            <td>@(result.IsEliminated ? "-" : $"{penalties:F3}s")</td>
                                            <td>@(result.IsEliminated ? "Desclassificado" : $"{result.CalculateTotalTime():F3}s")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    Resultados da Segunda Rodada
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Posição</th>
                                    <th>Nome</th>
                                    <th>Tempo Base</th>
                                    <th>Penalidades</th>
                                    <th>Tempo Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var round2Results = Model.Round2Results
                                        .OrderBy(p => p.IsEliminated)
                                        .ThenBy(p => p.CalculateTotalTime())
                                        .ToList();

                                    for (int i = 0; i < round2Results.Count; i++)
                                    {
                                        var result = round2Results[i];
                                        var penalties = result.CalculateTotalTime() - result.TimeInSeconds;
                                        <tr>
                                            <td>@(i + 1)</td>
                                            <td>@result.Name</td>
                                            <td>@(result.IsEliminated ? "Desclassificado" : $"{result.TimeInSeconds:F3}s")</td>
                                            <td>@(result.IsEliminated ? "-" : $"{penalties:F3}s")</td>
                                            <td>@(result.IsEliminated ? "Desclassificado" : $"{result.CalculateTotalTime():F3}s")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header">
            Configuração de Penalidades Atual
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Bravo
                            <span class="badge bg-primary rounded-pill">@config.BravoValue s</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Charlie
                            <span class="badge bg-primary rounded-pill">@config.CharlieValue s</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Miss
                            <span class="badge bg-primary rounded-pill">@config.MissValue s</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Vítima
                            <span class="badge bg-primary rounded-pill">@config.VitimaValue s</span>
                        </li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Plate
                            <span class="badge bg-primary rounded-pill">@config.PlateValue s</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Fault
                            <span class="badge bg-primary rounded-pill">@config.FaultValue s</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Desclassificado
                            <span class="badge bg-danger rounded-pill">@config.DisqualifiedValue s</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}
